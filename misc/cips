local Converted = {
	["_ScreenGui"] = Instance.new("ScreenGui");
	["_Frame"] = Instance.new("Frame");
	["_UIStroke"] = Instance.new("UIStroke");
	["_UICorner"] = Instance.new("UICorner");
	["_ChangelogLabel"] = Instance.new("TextLabel");
	["_UIStroke1"] = Instance.new("UIStroke");
	["_ImageLabel"] = Instance.new("ImageLabel");
	["_ScrollingFrame"] = Instance.new("ScrollingFrame");
	["_ChangelogTemplate"] = Instance.new("Frame");
	["_UIStroke2"] = Instance.new("UIStroke");
	["_UICorner1"] = Instance.new("UICorner");
	["_UIListLayout"] = Instance.new("UIListLayout");
	["_ChangeLog Imagelabel"] = Instance.new("ImageLabel");
	["_UIPadding"] = Instance.new("UIPadding");
	["_ChangelogLabel1"] = Instance.new("TextLabel");
	["_UIStroke3"] = Instance.new("UIStroke");
	["_UIListLayout1"] = Instance.new("UIListLayout");
	["_UIPadding1"] = Instance.new("UIPadding");
	["_DateLabel"] = Instance.new("TextLabel");
	["_UIStroke4"] = Instance.new("UIStroke");
	["_Close"] = Instance.new("ImageButton");
	["_red gradient"] = Instance.new("UIGradient");
	["_shadow"] = Instance.new("ImageLabel");
	["_TextLabel"] = Instance.new("TextLabel");
	["_UIStroke5"] = Instance.new("UIStroke");
	["_UIStroke6"] = Instance.new("UIStroke");
}

-- Properties:

Converted["_ScreenGui"].Enabled = true
Converted["_ScreenGui"].ZIndexBehavior = Enum.ZIndexBehavior.Sibling
Converted["_ScreenGui"].Parent = game:GetService("CoreGui")

Converted["_Frame"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_Frame"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Frame"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Frame"].BorderSizePixel = 0
Converted["_Frame"].Position = UDim2.new(0.5, 0, 0.5, 0)
Converted["_Frame"].Size = UDim2.new(0, 407, 0, 473)
Converted["_Frame"].Parent = Converted["_ScreenGui"]

Converted["_UIStroke"].Thickness = 3
Converted["_UIStroke"].Parent = Converted["_Frame"]

Converted["_UICorner"].Parent = Converted["_Frame"]

Converted["_ChangelogLabel"].Font = Enum.Font.FredokaOne
Converted["_ChangelogLabel"].Text = "Changelog"
Converted["_ChangelogLabel"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ChangelogLabel"].TextScaled = true
Converted["_ChangelogLabel"].TextSize = 14
Converted["_ChangelogLabel"].TextWrapped = true
Converted["_ChangelogLabel"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ChangelogLabel"].BackgroundTransparency = 121
Converted["_ChangelogLabel"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_ChangelogLabel"].BorderSizePixel = 0
Converted["_ChangelogLabel"].Position = UDim2.new(0.0909090936, 0, -0.033826638, 0)
Converted["_ChangelogLabel"].Size = UDim2.new(0, 152, 0, 32)
Converted["_ChangelogLabel"].Name = "ChangelogLabel"
Converted["_ChangelogLabel"].Parent = Converted["_Frame"]

Converted["_UIStroke1"].Thickness = 3
Converted["_UIStroke1"].Parent = Converted["_ChangelogLabel"]

Converted["_ImageLabel"].Image = "rbxassetid://111164450034240"
Converted["_ImageLabel"].ScaleType = Enum.ScaleType.Fit
Converted["_ImageLabel"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ImageLabel"].BackgroundTransparency = 1
Converted["_ImageLabel"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_ImageLabel"].BorderSizePixel = 0
Converted["_ImageLabel"].Position = UDim2.new(-0.0294840299, 0, -0.061310783, 0)
Converted["_ImageLabel"].Rotation = -10
Converted["_ImageLabel"].Size = UDim2.new(0, 56, 0, 58)
Converted["_ImageLabel"].Parent = Converted["_Frame"]

Converted["_ScrollingFrame"].AutomaticCanvasSize = Enum.AutomaticSize.Y
Converted["_ScrollingFrame"].CanvasSize = UDim2.new(0, 0, 0, 0)
Converted["_ScrollingFrame"].ScrollBarImageColor3 = Color3.fromRGB(0, 0, 0)
Converted["_ScrollingFrame"].ScrollBarThickness = 6
Converted["_ScrollingFrame"].Active = true
Converted["_ScrollingFrame"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ScrollingFrame"].BackgroundTransparency = 1
Converted["_ScrollingFrame"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_ScrollingFrame"].BorderSizePixel = 0
Converted["_ScrollingFrame"].Position = UDim2.new(0, 6, 0, 14)
Converted["_ScrollingFrame"].Size = UDim2.new(0, 401, 0, 448)
Converted["_ScrollingFrame"].ZIndex = -2
Converted["_ScrollingFrame"].Parent = Converted["_Frame"]

Converted["_ChangelogTemplate"].BackgroundColor3 = Color3.fromRGB(85.0000025331974, 255, 0)
Converted["_ChangelogTemplate"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_ChangelogTemplate"].BorderSizePixel = 0
Converted["_ChangelogTemplate"].Size = UDim2.new(0, 382, 0, 100)
Converted["_ChangelogTemplate"].Name = "ChangelogTemplate"
Converted["_ChangelogTemplate"].Parent = Converted["_ScrollingFrame"]
Converted["_ChangelogTemplate"].Visible = false

Converted["_UIStroke2"].Thickness = 2.5
Converted["_UIStroke2"].Parent = Converted["_ChangelogTemplate"]

Converted["_UICorner1"].Parent = Converted["_ChangelogTemplate"]

Converted["_UIListLayout"].Padding = UDim.new(0, 10)
Converted["_UIListLayout"].FillDirection = Enum.FillDirection.Horizontal
Converted["_UIListLayout"].SortOrder = Enum.SortOrder.LayoutOrder
Converted["_UIListLayout"].Parent = Converted["_ChangelogTemplate"]

Converted["_ChangeLog Imagelabel"].Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
Converted["_ChangeLog Imagelabel"].ScaleType = Enum.ScaleType.Fit
Converted["_ChangeLog Imagelabel"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ChangeLog Imagelabel"].BackgroundTransparency = 1
Converted["_ChangeLog Imagelabel"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_ChangeLog Imagelabel"].BorderSizePixel = 0
Converted["_ChangeLog Imagelabel"].Position = UDim2.new(0, 0, 0.200000003, 0)
Converted["_ChangeLog Imagelabel"].Size = UDim2.new(0, 83, 0, 80)
Converted["_ChangeLog Imagelabel"].Name = "ChangeLog Imagelabel"
Converted["_ChangeLog Imagelabel"].Parent = Converted["_ChangelogTemplate"]

Converted["_UIPadding"].PaddingLeft = UDim.new(0, 15)
Converted["_UIPadding"].PaddingTop = UDim.new(0, 10)
Converted["_UIPadding"].Parent = Converted["_ChangelogTemplate"]

Converted["_ChangelogLabel1"].Font = Enum.Font.FredokaOne
Converted["_ChangelogLabel1"].Text = "sup"
Converted["_ChangelogLabel1"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ChangelogLabel1"].TextScaled = true
Converted["_ChangelogLabel1"].TextSize = 14
Converted["_ChangelogLabel1"].TextWrapped = true
Converted["_ChangelogLabel1"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ChangelogLabel1"].BackgroundTransparency = 121
Converted["_ChangelogLabel1"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_ChangelogLabel1"].BorderSizePixel = 0
Converted["_ChangelogLabel1"].Position = UDim2.new(0.288828343, 0, 0, 0)
Converted["_ChangelogLabel1"].Size = UDim2.new(0, 226, 0, 36)
Converted["_ChangelogLabel1"].Name = "ChangelogLabel"
Converted["_ChangelogLabel1"].Parent = Converted["_ChangelogTemplate"]

Converted["_UIStroke3"].Thickness = 3
Converted["_UIStroke3"].Parent = Converted["_ChangelogLabel1"]

Converted["_UIListLayout1"].Padding = UDim.new(0, 20)
Converted["_UIListLayout1"].SortOrder = Enum.SortOrder.LayoutOrder
Converted["_UIListLayout1"].Parent = Converted["_ScrollingFrame"]

Converted["_UIPadding1"].PaddingLeft = UDim.new(0, 7)
Converted["_UIPadding1"].PaddingTop = UDim.new(0, 25)
Converted["_UIPadding1"].Parent = Converted["_ScrollingFrame"]

Converted["_DateLabel"].Font = Enum.Font.FredokaOne
Converted["_DateLabel"].Text = "Changelog"
Converted["_DateLabel"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_DateLabel"].TextScaled = true
Converted["_DateLabel"].TextSize = 14
Converted["_DateLabel"].TextWrapped = true
Converted["_DateLabel"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_DateLabel"].BackgroundTransparency = 121
Converted["_DateLabel"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_DateLabel"].BorderSizePixel = 0
Converted["_DateLabel"].Position = UDim2.new(0.69287467, 0, 0.961945057, 0)
Converted["_DateLabel"].Size = UDim2.new(0, 152, 0, 32)
Converted["_DateLabel"].Name = "DateLabel"
Converted["_DateLabel"].Parent = Converted["_Frame"]

Converted["_UIStroke4"].Thickness = 3
Converted["_UIStroke4"].Parent = Converted["_DateLabel"]

Converted["_Close"].Image = "rbxassetid://14423621163"
Converted["_Close"].PressedImage = "rbxassetid://14423621349"
Converted["_Close"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Close"].BackgroundTransparency = 2
Converted["_Close"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Close"].BorderSizePixel = 0
Converted["_Close"].Position = UDim2.new(0, 358, 0, -29)
Converted["_Close"].Size = UDim2.new(0, 61, 0, 58)
Converted["_Close"].Name = "Close"
Converted["_Close"].Parent = Converted["_Frame"]

Converted["_red gradient"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 2.000000118277967, 61.00000016391277)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 39.00000147521496, 125.00000014901161))
}
Converted["_red gradient"].Rotation = -90
Converted["_red gradient"].Name = "red gradient"
Converted["_red gradient"].Parent = Converted["_Close"]

Converted["_shadow"].Image = "rbxassetid://14001321443"
Converted["_shadow"].ImageColor3 = Color3.fromRGB(0, 0, 0)
Converted["_shadow"].ImageTransparency = 0.75
Converted["_shadow"].ScaleType = Enum.ScaleType.Slice
Converted["_shadow"].SliceCenter = Rect.new(50, 50, 150, 150)
Converted["_shadow"].SliceScale = 0.75
Converted["_shadow"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_shadow"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_shadow"].BackgroundTransparency = 1
Converted["_shadow"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_shadow"].BorderSizePixel = 0
Converted["_shadow"].Position = UDim2.new(0, 33, 0, 38)
Converted["_shadow"].Size = UDim2.new(0, 66, 0, 70)
Converted["_shadow"].Visible = false
Converted["_shadow"].ZIndex = 49
Converted["_shadow"].Name = "shadow"
Converted["_shadow"].Parent = Converted["_Close"]

Converted["_TextLabel"].Font = Enum.Font.FredokaOne
Converted["_TextLabel"].Text = "X"
Converted["_TextLabel"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel"].TextScaled = true
Converted["_TextLabel"].TextSize = 18
Converted["_TextLabel"].TextWrapped = true
Converted["_TextLabel"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_TextLabel"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel"].BackgroundTransparency = 1
Converted["_TextLabel"].BorderColor3 = Color3.fromRGB(27.000002190470695, 42.000001296401024, 53.000004440546036)
Converted["_TextLabel"].BorderSizePixel = 0
Converted["_TextLabel"].Position = UDim2.new(0.5, 0, 0.5, 0)
Converted["_TextLabel"].Size = UDim2.new(0, 58, 0, 37)
Converted["_TextLabel"].ZIndex = 50
Converted["_TextLabel"].AutoLocalize = false
Converted["_TextLabel"].Parent = Converted["_Close"]

Converted["_UIStroke5"].LineJoinMode = Enum.LineJoinMode.Bevel
Converted["_UIStroke5"].Thickness = 3
Converted["_UIStroke5"].Parent = Converted["_TextLabel"]

Converted["_UIStroke6"].Parent = Converted["_ScreenGui"]

local function setupCloseButtonAnimations()
	local closeButton = Converted["_Close"]
	local originalSize = closeButton.Size
	local originalPosition = closeButton.Position

	-- Hover animation
	closeButton.MouseEnter:Connect(function()
		game:GetService("TweenService"):Create(closeButton, TweenInfo.new(0.2), {
			Size = UDim2.new(0, originalSize.X.Offset * 1.1, 0, originalSize.Y.Offset * 1.1),
			Position = UDim2.new(0, originalPosition.X.Offset - 3, 0, originalPosition.Y.Offset - 3)
		}):Play()

		-- Show shadow on hover
		closeButton.shadow.Visible = false
	end)

	closeButton.MouseLeave:Connect(function()
		game:GetService("TweenService"):Create(closeButton, TweenInfo.new(0.2), {
			Size = originalSize,
			Position = originalPosition
		}):Play()

		-- Hide shadow when not hovering
		closeButton.shadow.Visible = false
	end)

	-- Click animation
	closeButton.MouseButton1Down:Connect(function()
		game:GetService("TweenService"):Create(closeButton, TweenInfo.new(0.1), {
			Size = UDim2.new(0, originalSize.X.Offset * 0.9, 0, originalSize.Y.Offset * 0.9),
			Position = UDim2.new(0, originalPosition.X.Offset + 3, 0, originalPosition.Y.Offset + 3)
		}):Play()
	end)

	closeButton.MouseButton1Up:Connect(function()
		game:GetService("TweenService"):Create(closeButton, TweenInfo.new(0.1), {
			Size = UDim2.new(0, originalSize.X.Offset * 1.1, 0, originalSize.Y.Offset * 1.1),
			Position = UDim2.new(0, originalPosition.X.Offset - 3, 0, originalPosition.Y.Offset - 3)
		}):Play()
	end)

	-- Add click functionality to close the UI
	closeButton.MouseButton1Click:Connect(function()
		-- Create a closing animation
		Converted["_ScreenGui"].Enabled = false
	end)
end
setupCloseButtonAnimations()

local Library = {}
local blurEffect = nil

function Library:CreateMainUi(params)
    Converted["_ChangelogLabel"].Text = params.Title or "Changelog"
    Converted["_ImageLabel"].Image = params.ChangelogIcon or "rbxassetid://111164450034240"
    
    -- Add blur effect if enabled
    if params.EnableBlur then
        -- Create blur effect if it doesn't exist
        if not blurEffect then
            blurEffect = Instance.new("BlurEffect")
            blurEffect.Size = params.BlurSize or 10
            blurEffect.Enabled = true
            blurEffect.Parent = game:GetService("Lighting")
        end
        
        -- Connect to the close button to disable blur when UI is closed
        Converted["_Close"].MouseButton1Click:Connect(function()
            if blurEffect then
                blurEffect.Enabled = false
            end
        end)
    end
end 

function Library:CreateChangelogFrame(params)
    local newChangelogFrame = Converted["_ChangelogTemplate"]:Clone()
    newChangelogFrame.Name = "Changelog_" .. os.time() 

    local imageLabel = newChangelogFrame:FindFirstChild("ChangeLog Imagelabel")
    if imageLabel then
        if params.ImageLabelId then
            imageLabel.Image = params.ImageLabelId
        end

        if params.ImageLabelVisible == false then
            imageLabel.Visible = false
        end
    end

    local textLabel = newChangelogFrame:FindFirstChild("ChangelogLabel")
    if textLabel and params.Text then
        textLabel.Text = params.Text
    end

    if params.Color then
        if type(params.Color) == "string" then
            local r, g, b = params.Color:match("%((%d+),%s*(%d+),%s*(%d+)%)")
            if r and g and b then
                newChangelogFrame.BackgroundColor3 = Color3.fromRGB(tonumber(r), tonumber(g), tonumber(b))
            end
        else
            newChangelogFrame.BackgroundColor3 = params.Color
        end
    end

    if params.Date then
        local day, month, year = params.Date:match("(%d+)%s+(%a+)%s+(%d+)")

        if day and month and year then
            local monthNames = {
                ["January"] = 1, ["Jan"] = 1,
                ["February"] = 2, ["Feb"] = 2,
                ["March"] = 3, ["Mar"] = 3,
                ["April"] = 4, ["Apr"] = 4,
                ["May"] = 5,
                ["June"] = 6, ["Jun"] = 6,
                ["July"] = 7, ["Jul"] = 7,
                ["August"] = 8, ["Aug"] = 8,
                ["September"] = 9, ["Sep"] = 9,
                ["October"] = 10, ["Oct"] = 10,
                ["November"] = 11, ["Nov"] = 11,
                ["December"] = 12, ["Dec"] = 12
            }

            local monthNum = monthNames[month]

            if monthNum then
                local shortYear = year:sub(-2) 
                local formattedDate = string.format("%02d/%02d/%s", monthNum, tonumber(day), shortYear)

                Converted["_DateLabel"].Text = formattedDate
            end
        end
    end

    if params.LayoutOrder then
        newChangelogFrame.LayoutOrder = params.LayoutOrder
    end

    newChangelogFrame.Visible = true
    newChangelogFrame.Parent = Converted["_ScrollingFrame"]

    return newChangelogFrame
end

-- Add function to toggle blur effect
function Library:ToggleBlur(enabled, size)
    if not blurEffect then
        blurEffect = Instance.new("BlurEffect")
        blurEffect.Parent = game:GetService("Lighting")
    end
    
    blurEffect.Enabled = enabled
    if size then
        blurEffect.Size = size
    end
end

-- Add function to set blur intensity
function Library:SetBlurIntensity(intensity)
    if not blurEffect then
        blurEffect = Instance.new("BlurEffect")
        blurEffect.Enabled = true
        blurEffect.Parent = game:GetService("Lighting")
    end
    
    blurEffect.Size = intensity
end

function Library:Destroy()
    if blurEffect then
        blurEffect:Destroy()
        blurEffect = nil
    end
    
    if Converted["_ScreenGui"] then
        Converted["_ScreenGui"]:Destroy()
    end
end

return Library
